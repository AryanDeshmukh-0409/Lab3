package UI;

import Model.User;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Image;
import java.io.File;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextArea;
import javax.swing.SwingConstants;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author deshm
 */
public class NewJFrame extends javax.swing.JFrame {

    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(NewJFrame.class.getName());

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        genderButtonGroup = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        Photo = new javax.swing.JLabel();
        FirstNameText = new javax.swing.JTextField();
        LastNameText = new javax.swing.JTextField();
        MaleRadio = new javax.swing.JRadioButton();
        FemaleRadio = new javax.swing.JRadioButton();
        OtherRadio = new javax.swing.JRadioButton();
        EmailText = new javax.swing.JTextField();
        firstNameLabel = new javax.swing.JLabel();
        lastNameLabel = new javax.swing.JLabel();
        genderLabel = new javax.swing.JLabel();
        SubmitButton = new javax.swing.JButton();
        ageLabel = new javax.swing.JLabel();
        phoneNumLabel = new javax.swing.JLabel();
        emailLabel = new javax.swing.JLabel();
        UploadButton = new javax.swing.JButton();
        ageSpinner = new javax.swing.JSpinner();
        PhoneFormattedText = new javax.swing.JFormattedTextField();
        hobbiesLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        HobbiesTextArea = new javax.swing.JTextArea();
        continentComboBox = new javax.swing.JComboBox<>();
        continentLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 255, 255));

        Photo.setText("Photo");

        genderButtonGroup.add(MaleRadio);
        MaleRadio.setText("Male");

        genderButtonGroup.add(FemaleRadio);
        FemaleRadio.setText("Female");

        genderButtonGroup.add(OtherRadio);
        OtherRadio.setText("Other");

        EmailText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmailTextActionPerformed(evt);
            }
        });

        firstNameLabel.setText("FirstName");

        lastNameLabel.setText("LastName");

        genderLabel.setText("Gender");

        SubmitButton.setText("Submit");
        SubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitButtonActionPerformed(evt);
            }
        });

        ageLabel.setText("Age");

        phoneNumLabel.setText("Phone no");

        emailLabel.setText("Email");

        UploadButton.setText("Upload");
        UploadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UploadButtonActionPerformed(evt);
            }
        });

        ageSpinner.setModel(new javax.swing.SpinnerNumberModel(0, null, 120, 1));

        try {
            PhoneFormattedText.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###-###-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        PhoneFormattedText.setToolTipText("123-456-7890");

        hobbiesLabel.setText("Hobbies");

        HobbiesTextArea.setColumns(20);
        HobbiesTextArea.setRows(5);
        jScrollPane1.setViewportView(HobbiesTextArea);

        continentComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Asia", "Africa", "North America", "South America", "Antarctica", "Europe", "Australia " }));
        continentComboBox.setSelectedIndex(-1);

        continentLabel.setText("Continent");
        continentLabel.setToolTipText("");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 261, Short.MAX_VALUE)
                .addComponent(SubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(248, 248, 248))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(hobbiesLabel)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(UploadButton))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(Photo, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(87, 87, 87)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(firstNameLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lastNameLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(genderLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(ageLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(phoneNumLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(emailLabel, javax.swing.GroupLayout.Alignment.TRAILING))))
                    .addComponent(continentLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(continentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(EmailText, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(FemaleRadio)
                                .addComponent(FirstNameText, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                                .addComponent(LastNameText)
                                .addComponent(MaleRadio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(OtherRadio))
                        .addComponent(PhoneFormattedText, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(ageSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Photo, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(UploadButton))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(firstNameLabel)
                            .addComponent(FirstNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LastNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lastNameLabel))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(MaleRadio)
                                    .addComponent(OtherRadio))
                                .addGap(8, 8, 8)
                                .addComponent(FemaleRadio))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(genderLabel)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ageLabel)
                            .addComponent(ageSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(phoneNumLabel)
                    .addComponent(PhoneFormattedText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emailLabel)
                    .addComponent(EmailText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(hobbiesLabel)
                        .addGap(0, 62, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(continentLabel)
                    .addComponent(continentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(SubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void EmailTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmailTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EmailTextActionPerformed
    private File photoFile = null;
    private void UploadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UploadButtonActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        chooser.setDialogTitle("Select a Photo");
        chooser.setAcceptAllFileFilterUsed(false);
        chooser.addChoosableFileFilter(new javax.swing.filechooser.FileNameExtensionFilter(
                "Image files", "jpg", "jpeg", "png", "gif"));

        int result = chooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            photoFile = chooser.getSelectedFile();

            // Load and scale the image to fit photoLabel
            ImageIcon icon = new ImageIcon(photoFile.getAbsolutePath());
            Image img = icon.getImage().getScaledInstance(
                    Photo.getWidth(), Photo.getHeight(),
                    Image.SCALE_SMOOTH);

            // Show photo in JLabel
            Photo.setIcon(new ImageIcon(img));
            Photo.setText(""); // clear default "No Photo"
       photoFile = chooser.getSelectedFile(); // MODIFIED

// Show photo in JLabel
Photo.setIcon(new ImageIcon(img));
Photo.setText(""); 
        }
    }//GEN-LAST:event_UploadButtonActionPerformed

    private void SubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitButtonActionPerformed

        try {
// Get values from form
            String first_name;
            String last_name;
            String gender = "";
            int age;
            String email;
            String phone_number;
            String continent = "";
            String hobbies;
            File PhotoFile;

            // Read gender from radio buttons
            if (MaleRadio.isSelected()) {
                gender = "Male";
            } else if (FemaleRadio.isSelected()) {
                gender = "Female";
            } else if (OtherRadio.isSelected()) {
                gender = "Other";
            }

            //extract and sotre user data
            first_name = this.FirstNameText.getText();
            last_name = this.LastNameText.getText();
            age = (int) this.ageSpinner.getModel().getValue();
            phone_number = this.PhoneFormattedText.getText();
            email = this.EmailText.getText();
            hobbies = (String) this.HobbiesTextArea.getText();

            if (continentComboBox.getSelectedIndex() != -1) {
                continent = (String) continentComboBox.getSelectedItem();
            }

            // Validation
            if (Photo.getIcon() == null) {   // NEW
    JOptionPane.showMessageDialog(rootPane, "Please upload an image!", "Oops!", JOptionPane.ERROR_MESSAGE);
    return;
}
            // check if first_name is empty
            if (first_name.isBlank()) {
                JOptionPane.showMessageDialog(rootPane, "First name is required!", "Ooops!", JOptionPane.ERROR_MESSAGE);
                return;
            }

            //check first name only contains letter and space
            if (!first_name.matches("[a-zA-Z\\s]+")) {
                JOptionPane.showMessageDialog(rootPane, "First name can only contain letters and spaces!", "Ooops!", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (last_name.isBlank()) {
                JOptionPane.showMessageDialog(rootPane, "Last Name is required!", "Ooops!", JOptionPane.ERROR_MESSAGE);
                return;
            }

            //check last name only contains letter and space
            if (!last_name.matches("[a-zA-Z\\s]+")) {
                JOptionPane.showMessageDialog(rootPane, "Last name can only contain letters and spaces!", "Ooops!", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (gender.isBlank()) {
                JOptionPane.showMessageDialog(rootPane, "Please select a Gender!", "Ooops!", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (age <= 0) {
                JOptionPane.showMessageDialog(rootPane, "Age must be greater than 0!", "Ooops!", JOptionPane.ERROR_MESSAGE);
                return;
            }

            String cleanPhone = phone_number.replaceAll("[\\s\\-\\(\\)]", "");
            if (phone_number.isBlank() || !cleanPhone.matches("\\d{10,15}")) {
                JOptionPane.showMessageDialog(rootPane, "Invalid phone number provided!", "Ooops!", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (phone_number.isBlank()) {
                if (!email.matches("^[A-Za-z0-9+_.-]+@[A-Za-z0-9.-]+$")) {
                    JOptionPane.showMessageDialog(rootPane, "Invalid Email Format!", "Ooops!", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }

            // Validate email
            if (email.isBlank() || !email.matches("^[a-zA-Z0-9_+&*-]+(?:\\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,7}$")) {
                JOptionPane.showMessageDialog(rootPane, "Invalid email address provided!", "Ooops!", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Validate Hobbies
            if (hobbies == null || hobbies.isBlank()) {
                JOptionPane.showMessageDialog(rootPane, "Please write down your hobbies", "Oops!", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // validate continent 
            if (continent == null || continent.isBlank()) {
                JOptionPane.showMessageDialog(rootPane, "Please select a continent", "Oops!", JOptionPane.ERROR_MESSAGE);
                return;
            }

            User user = new User(first_name, last_name, gender, age, email, phone_number, continent, hobbies,  photoFile.getAbsolutePath());
               JPanel panel = new JPanel(new BorderLayout(10, 10));
                JLabel picLabel = new JLabel();
// ✅ Link directly to the JLabel's icon
                 picLabel.setIcon(Photo.getIcon());
                 picLabel.setPreferredSize(new Dimension(120, 120));
                 picLabel.setBorder(BorderFactory.createLineBorder(Color.BLACK));
              JTextArea details = new JTextArea(user.toString());
            details.setEditable(false);

            panel.add(picLabel, BorderLayout.WEST);
            panel.add(details, BorderLayout.CENTER);

            
           JOptionPane.showMessageDialog(rootPane, panel, "Success!", JOptionPane.INFORMATION_MESSAGE);

        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Something went wrong! Please try again.", "Ooops!", JOptionPane.ERROR_MESSAGE);
            System.out.println("Error: " + e.getMessage());
        }

//    // Create profile panel
//    JPanel panel = new JPanel(new BorderLayout(10, 10));
//
//    // Left: Photo
//    JLabel picLabel = new JLabel();
//    if (photoFile != null) {
//        ImageIcon icon = new ImageIcon(photoFile.getAbsolutePath());
//        Image img = icon.getImage().getScaledInstance(120, 120, Image.SCALE_SMOOTH);
//        picLabel.setIcon(new ImageIcon(img));
//    } else {
//        picLabel.setText("No Photo");
//        picLabel.setHorizontalAlignment(SwingConstants.CENTER);
//        picLabel.setPreferredSize(new Dimension(120, 120));
//        picLabel.setBorder(BorderFactory.createLineBorder(Color.BLACK));
//    }
//
//    // Right: Details
//    JTextArea details = new JTextArea(
//        "Name: " + first + " " + last + "\n" +
//        "Gender: " + gender + "\n" +
//        "Age: " + age + "\n" +
//        "Phone: " + phone + "\n" +
//        "Email: " + email
//    );
//    details.setEditable(false);
//
//    panel.add(picLabel, BorderLayout.WEST);
//    panel.add(details, BorderLayout.CENTER);
//
//    // Show profile dialog
//    JOptionPane.showMessageDialog(this, panel, "User Profile", JOptionPane.PLAIN_MESSAGE);

    }//GEN-LAST:event_SubmitButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (Exception ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }

        java.awt.EventQueue.invokeLater(() -> new NewJFrame().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField EmailText;
    private javax.swing.JRadioButton FemaleRadio;
    private javax.swing.JTextField FirstNameText;
    private javax.swing.JTextArea HobbiesTextArea;
    private javax.swing.JTextField LastNameText;
    private javax.swing.JRadioButton MaleRadio;
    private javax.swing.JRadioButton OtherRadio;
    private javax.swing.JFormattedTextField PhoneFormattedText;
    private javax.swing.JLabel Photo;
    private javax.swing.JButton SubmitButton;
    private javax.swing.JButton UploadButton;
    private javax.swing.JLabel ageLabel;
    private javax.swing.JSpinner ageSpinner;
    private javax.swing.JComboBox<String> continentComboBox;
    private javax.swing.JLabel continentLabel;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JLabel firstNameLabel;
    private javax.swing.ButtonGroup genderButtonGroup;
    private javax.swing.JLabel genderLabel;
    private javax.swing.JLabel hobbiesLabel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lastNameLabel;
    private javax.swing.JLabel phoneNumLabel;
    // End of variables declaration//GEN-END:variables
}
